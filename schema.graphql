type Query{
  auth:User
  test:String
  users:[User]
  products:[Product]
}

type Product {
  id: ID
  title: String!
  price: Float!
  description: String
  image: String
  category: String
  rating: Rating
}

type User {
  username: String,
  email: String,
  picture: String,
}

type PaymentResponse {
  authorization_url: String!
  access_code: String!
  reference: String!
}

type Rating {
  rate: Float!
  count: Int!
}

input RatingInput {
  rate: Float!
  count: Int!
}

type Mutation {
  createNewProduct(input: CreateProductInput!): Product!
  initiatePayment(email: String!, productId: ID!): PaymentResponse
}

input CreateProductInput {
  title: String!
  price: Float!
  description: String!
  category: String!
  image: String!
  rating: RatingInput!
}

type Subscription {
    alertResponse:[PaymentResponse],
    test:String
}

