type Query{
  auth:User
  test:String
  users:[User]
  products:[Product]
}

type Product {
  id: ID!
  title: String!
  price: Float!
  description: String
  image: String
  category: String
  rating: Rating
}

type User {
  username: String,
  email: String,
    
}

type Rating {
  rate: Float!
  count: Float!
}

type PaymentResponse {
  authorization_url: String!
  access_code: String!
  reference: String!
}

type Mutation {
  initiatePayment(email: String!, productId: ID!): PaymentResponse
}

type Subscription {
    alertResponse:[PaymentResponse],
    test:String
}